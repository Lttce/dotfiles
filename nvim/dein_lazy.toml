# ===========================================================================
#
#   dein.vim dein_lazy.toml
#
# ===========================================================================

# =================================================
[[plugins]]
repo = 'sainnhe/edge'
on_event = 'ColorSchemePre'
hook_source = '''
    let g:edge_style = 'aura'
    let g:edge_better_performance = 1
    let g:edge_transparent_background = 0
    let g:edge_disable_italic_comment = 1
    let g:edge_enable_italic = 0
'''

[[plugins]]
repo = 'sainnhe/everforest'
on_event = 'ColorSchemePre'
hook_source = '''
    let g:everforest_background = 'hard'
    let g:everforest_better_performance = 1
'''

# =================================================
[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'williamboman/mason.nvim'
on_event = 'BufRead'
hook_source = '''
lua << EOF
    require('mason').setup({})
EOF
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
depends = ['nvim-lspconfig', 'cmp-nvim-lsp']
on_source = 'mason.nvim'
hook_source = '''
    source ~/dotfiles/nvim/plugins/lsp.lua
'''

# =================================================
[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
on_event = 'BufRead'
depends = 'plenary.nvim'
hook_source = '''
lua << EOF
    local null_ls = require('null-ls')
    local sources = {
        null_ls.builtins.diagnostics.hadolint,
        null_ls.builtins.diagnostics.mypy,

        null_ls.builtins.formatting.isort,
        null_ls.builtins.formatting.black,
    }

    null_ls.setup({ sources = sources })
EOF
'''

# =================================================
[[plugins]]
repo = 'hrsh7th/nvim-cmp'
on_event = 'InsertEnter'
hook_source = '''
    source ~/dotfiles/nvim/plugins/cmp.lua
'''

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-vsnip'
on_source = 'nvim-cmp'
depends = 'vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_source = '''
    let g:vsnip_snippet_dir = expand('~/dotfiles/nvim/plugins/vsnip')
    " Jump forward
    imap <expr> <C-j> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-j>'
    smap <expr> <C-j> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-j>'

    " Jump backward
    imap <expr> <C-k> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-k>'
    smap <expr> <C-k> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-k>'
'''

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp-document-symbol'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp-signature-help'
on_source = 'nvim-cmp'

# =================================================
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
on_cmd = 'Telescope'
depends = ['plenary.nvim', 'nvim-web-devicons']
hook_add = '''
    nnoremap <silent> <C-p> <cmd>Telescope find_files<CR>
    nnoremap <silent> <C-k> <cmd>Telescope buffers<CR>
'''
hook_source = '''
lua << EOF
    require('telescope').setup({
        defaults = {
            mappings = {
                i = {
                    ['<ESC>'] = require('telescope.actions').close,
                    ['<C-j>'] = require('telescope.actions').move_selection_next,
                    ['<C-k>'] = require('telescope.actions').move_selection_previous,
                }
            }
        }
    })
EOF
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

# =================================================
[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'BufRead'

# =================================================
[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_source = '''
    let g:lexima_map_escape = ''

    " <> rules for vim and toml
    call lexima#add_rule({ 'char': '<', 'input': '<', 'input_after': '>', 'filetype': ['vim', 'toml'] })
    call lexima#add_rule({ 'char': '>', 'at': '\%#>', 'leave': 1, 'filetype': ['vim', 'toml'] })
    call lexima#add_rule({ 'char': '<BS>', 'at': '<\%#>', 'input': '<BS>', 'delete' : 1, 'filetype': ['vim', 'toml'] })

    " Python f string
    call lexima#add_rule({ 'char': "'", 'at': 'f\%#', 'input': "'", 'input_after': "'", 'filetype': 'python' })
'''

# =================================================
# Mark changes in files managed by Git
[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_if = '!empty(gitbranch#name())'
hook_source = '''
lua << EOF
    require('gitsigns').setup()
EOF
'''

# =================================================
[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
hook_source = '''
    let g:quickrun_config = {}
    let g:quickrun_config._ = {
      \ 'outputter/buffer/into': 1,
      \ }
    let g:quickrun_config.python = { 'command' : 'python3' }
'''

# =================================================
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufEnter'
hook_post_update = 'TSUpdate'
hook_source = '''
lua << EOF
    require('nvim-treesitter.configs').setup {
        highlight = { 
            enable = true,
            additional_vim_regex_highlighting = false,
        }
    }
EOF
'''

# =================================================
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_cmd = ['IndentGuidesToggle']
hook_add = '''
    autocmd ColorScheme * highlight IndentGuidesOdd  ctermbg=237
    autocmd ColorScheme * highlight IndentGuidesEven ctermbg=236
'''
hook_source = '''
    let g:indent_guides_enable_on_vim_startup = 0
    let g:indent_guides_start_level = 2
    let g:indent_guides_guide_size = 1
'''

# =================================================
[[plugins]]
repo = 'voldikss/vim-floaterm'
on_cmd = 'FloatermToggle'
hook_add = '''
    nnoremap <space>t <cmd>FloatermToggle<CR>
    nnoremap T <cmd>FloatermNew tig<CR>
'''
hook_source = '''
    let g:floaterm_width = 0.8
    let g:floaterm_height = 0.8
    let g:floaterm_opener = 'tabe'
    let g:floaterm_borderchars = '─│─│╭╮╯╰'

    augroup CustomFloaterm
        autocmd Filetype floaterm nnoremap <buffer> <ESC> <cmd>FloatermToggle<CR>
    augroup end
'''

# =================================================
[[plugins]]
repo = 'folke/trouble.nvim'
on_cmd = 'TroubleToggle'
depends = ['nvim-lspconfig', 'nvim-web-devicons']

# =================================================
[[plugins]]
repo = 'obaland/vfiler.vim'
on_cmd = 'VFiler'
hook_add = '''
    nnoremap <space>p <cmd>VFiler<CR>
'''
hook_source = '''
lua << EOF
    require('vfiler/config').setup {
    }

    require('vfiler').start()
EOF
'''

