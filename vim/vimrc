" vim .vimrc

syntax enable
filetype indent plugin on

set encoding=utf-8

set nocompatible
set nobackup
set noswapfile

" Colors
autocmd ColorScheme desert highlight NonText guibg=NONE guifg=gray30
autocmd ColorScheme slate highlight PreProc guibg=NONE

colorscheme slate

if exists('+termguicolors')
   set termguicolors
endif

if exists('$TMUX')
    let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
    let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
endif

" Edit
set number

set autoread
set hidden

set autoindent
set smartindent

set smarttab
set expandtab
set shiftwidth=4
set tabstop=4

set list
set listchars=tab:>\ ,trail:-

set backspace=indent,eol,start

inoremap jk <ESC>

nnoremap x "_x
vnoremap x "_x

" Cursor
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\e[5 q\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\e[2 q\<Esc>\\"
else
    let &t_SI = "\e[5 q"
    let &t_EI = "\e[2 q"
endif

" Complete
set completeopt=menuone,preview

" Statusline
set laststatus=2
set ruler

" Command
if exists('+wildmenu')
    set wildmenu
endif

if exists('+wildignore')
    set wildoptions=pum
endif

set showcmd

" Terminal
tnoremap <ESC> <C-\><C-n>
tnoremap jk <C-\><C-n>

" Search
set incsearch
set hlsearch
set smartcase
set ignorecase

set shortmess-=S " Show match counts

" General
set mouse=a
set belloff=all

if exists('+clipboard')
    set clipboard+=unnamed
endif

" custom cmd
augroup cmd
    autocmd BufRead * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif
augroup end

